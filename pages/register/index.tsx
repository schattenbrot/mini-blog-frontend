import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { FormEventHandler, MouseEventHandler, useState } from "react";
import styled from "styled-components";
import Button from "../../components/base/button";
import { validateEmail, validatePassword } from "../../helpers/validation";

const Main = styled.div`
  background-color: ${(props) => props.theme.colors.secondary};
  max-width: 70%;
  padding: 1em 2em;
  font-size: 2em;
  border-radius: 1em;
  box-shadow: 0 0.25em 1em ${(props) => props.theme.colors.primary};

  h1 {
    text-decoration: underline;
    margin-bottom: 1em;
  }

  .input-element {
    margin-bottom: 1em;
  }

  label {
    display: block;
  }

  input {
    font-size: 1em;
    display: block;
    width: 100%;
    border-radius: 1em;
    border: none;

    &:hover,
    &:focus {
      box-shadow: 0 0.25em 1em ${(props) => props.theme.colors.primary};
    }
  }

  .control {
    float: right;
    button {
      margin: 0 0.25em;
      padding: 0.25em 1em;
      font-size: 1em;
    }
  }
`;

const RegisterPage: NextPage = () => {
  const router = useRouter();
  const [email, setEmail] = useState<string>("");
  const [password, setPassword] = useState<string>("");
  const [confirmPassword, setConfirmPassword] = useState<string>("");

  const emailInputHandler: React.FormEventHandler<HTMLInputElement> = (
    event
  ) => {
    setEmail(event.currentTarget.value);
  };

  const passwordInputHandler: React.FormEventHandler<HTMLInputElement> = (
    event
  ) => {
    setPassword(event.currentTarget.value);
  };

  const confirmPasswordInputHandler: React.FormEventHandler<
    HTMLInputElement
  > = (event) => {
    setConfirmPassword(event.currentTarget.value);
  };

  const toLoginHandler: MouseEventHandler = (event) => {
    event.preventDefault();
    router.push("/login");
  };

  const submitHandler: FormEventHandler = async (event) => {
    event.preventDefault();

    // simple form validation
    if (!validateEmail(email)) {
      return;
    }
    if (!validatePassword(password) && password !== confirmPassword) {
      return;
    }

    // budget validation successful
    // (async () => {
    const payload = {
      email,
      password,
    };

    const response = await fetch("https://testapi.schattenbrot.com/v1/users", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(payload),
    });

    if (!response) {
      console.log("Something horrible happened");
    }

    if (response.status === 201) {
      router.push("/login");
      return;
    }

    const data = await response.json();

    console.log(data);
    // })();
  };

  const resetHandler: FormEventHandler = (event) => {
    event.preventDefault();
    setEmail("");
    setPassword("");
    setConfirmPassword("");
  };

  return (
    <>
      <Head>
        <title>Register</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <Main>
        <h1>Register</h1>
        <form onSubmit={submitHandler} onReset={resetHandler}>
          <div className='input-element'>
            <label htmlFor='email'>Email</label>
            <input
              type='email'
              name='email'
              id='email'
              value={email}
              onInput={emailInputHandler}
            />
          </div>
          <div className='input-element'>
            <label htmlFor='password'>Password</label>
            <input
              type='password'
              name='password'
              id='password'
              value={password}
              onInput={passwordInputHandler}
            />
          </div>
          <div className='input-element'>
            <label htmlFor='confirm-password'>Confirm Password</label>
            <input
              type='password'
              name='confirm-password'
              id='confirm-password'
              value={confirmPassword}
              onInput={confirmPasswordInputHandler}
            />
          </div>
          <div className='control'>
            <Button type='reset' className='danger'>
              Reset
            </Button>
            <Button type='button' className='' onClick={toLoginHandler}>
              To Login
            </Button>
            <Button type='submit' className='ok'>
              Register
            </Button>
          </div>
        </form>
      </Main>
    </>
  );
};

export default RegisterPage;
